{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/user/register": {
      "post": {
        "operationId": "UserController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RegisterUserDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/register-captcha": {
      "get": {
        "operationId": "UserController_captcha",
        "parameters": [{ "name": "address", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/login": {
      "post": {
        "operationId": "UserController_userLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginUserDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginUserVoUnifiedRes" } } }
          }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/admin/login": {
      "post": {
        "operationId": "UserController_adminLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginUserDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginUserVoUnifiedRes" } } }
          }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/refresh": {
      "get": {
        "operationId": "UserController_refresh",
        "parameters": [{ "name": "refreshToken", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RefreshTokenVoUnifiedRes" } } }
          }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/admin/refresh": {
      "get": {
        "operationId": "UserController_adminRefresh",
        "parameters": [{ "name": "refreshToken", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RefreshTokenVoUnifiedRes" } } }
          }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/info": {
      "get": {
        "operationId": "UserController_info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserDetailVoUnifiedRes" } } }
          }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/update_password": {
      "post": {
        "operationId": "UserController_updatePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateUserPasswordDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/admin/update_password": {
      "post": {
        "operationId": "UserController_updatePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateUserPasswordDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/update_password/captcha": {
      "get": {
        "operationId": "UserController_updatePasswordCaptcha",
        "parameters": [{ "name": "address", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"]
      }
    },
    "/api/v1/user/update": {
      "post": {
        "operationId": "UserController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateUserDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/admin/update": {
      "post": {
        "operationId": "UserController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateUserDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/update/captcha": {
      "get": {
        "operationId": "UserController_updateCaptcha",
        "parameters": [],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/freeze": {
      "get": {
        "operationId": "UserController_freeze",
        "parameters": [{ "name": "id", "required": true, "in": "query", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/list": {
      "get": {
        "operationId": "UserController_list",
        "parameters": [
          { "name": "pageNo", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "pageSize", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "email", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "username", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "nickName", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserListVoUnifiedRes" } } }
          }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/upload": {
      "post": {
        "operationId": "UserController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "type": "object", "properties": { "file": { "type": "string", "format": "binary" } } }
            }
          }
        },
        "responses": {
          "201": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["User"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/fe-report/performance": {
      "post": {
        "operationId": "FeReportController_performance",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PerformanceDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["FE report"]
      }
    },
    "/api/v1/fe-report/error": {
      "post": {
        "operationId": "FeReportController_error",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorReportDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["FE report"]
      }
    },
    "/api/v1/sse/update_record": {
      "get": {
        "operationId": "SseController_updateRecord",
        "parameters": [],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "tags": ["SSE"]
      }
    },
    "/api/v1/meeting-room/list": {
      "get": {
        "operationId": "MeetingRoomController_list",
        "parameters": [
          { "name": "pageNo", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "pageSize", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "name", "required": false, "in": "query", "schema": { "maxLength": 10, "type": "string" } },
          { "name": "capacity", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "equipment", "required": false, "in": "query", "schema": { "maxLength": 50, "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/MeetingRoomListVoUnifiedRes" } }
            }
          }
        },
        "tags": ["Meeting room"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/meeting-room/create": {
      "post": {
        "operationId": "MeetingRoomController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateMeetingRoomDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MeetingRoomUnifiedRes" } } }
          }
        },
        "tags": ["Meeting room"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/meeting-room/{id}": {
      "get": {
        "operationId": "MeetingRoomController_find",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MeetingRoomUnifiedRes" } } }
          }
        },
        "tags": ["Meeting room"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "MeetingRoomController_delete",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Meeting room"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/meeting-room/update": {
      "put": {
        "operationId": "MeetingRoomController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMeetingRoomDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Meeting room"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/add": {
      "post": {
        "operationId": "BookingController_add",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateBookingDto" } } }
        },
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/list": {
      "get": {
        "operationId": "BookingController_list",
        "parameters": [
          { "name": "pageNo", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "pageSize", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "username", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "meetingRoomName", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "meetingRoomPosition", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "bookingTimeRangeStart", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "bookingTimeRangeEnd", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BookingListVoUnifiedRes" } } }
          }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/apply/{id}": {
      "get": {
        "operationId": "BookingController_apply",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/reject/{id}": {
      "get": {
        "operationId": "BookingController_reject",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/unbind/{id}": {
      "get": {
        "operationId": "BookingController_unbind",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/booking/urge/{id}": {
      "get": {
        "operationId": "BookingController_urge",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "number" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "$ref": "NullUnifiedRes" } } } }
        },
        "tags": ["Booking"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/statistic/userBookingCount": {
      "get": {
        "operationId": "StatisticController_userBookignCount",
        "parameters": [
          { "name": "startTime", "required": true, "in": "query", "schema": { "type": "string" } },
          { "name": "endTime", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "type": "object", "$ref": "#/components/schemas/UserBookignCountVo" }
                    },
                    "error": { "type": "integer" },
                    "error_msg": { "type": "string" }
                  },
                  "$$ref": "#/components/schemas/UserBookignCountVoUnifiedRes"
                }
              }
            }
          }
        },
        "tags": ["Statistic"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/statistic/meetingRoomUsedCount": {
      "get": {
        "operationId": "StatisticController_meetingRoomUsedCount",
        "parameters": [
          { "name": "startTime", "required": true, "in": "query", "schema": { "type": "string" } },
          { "name": "endTime", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "type": "object", "$ref": "#/components/schemas/MeetingRoomUsedCountVo" }
                    },
                    "error": { "type": "integer" },
                    "error_msg": { "type": "string" }
                  },
                  "$$ref": "#/components/schemas/MeetingRoomUsedCountVoUnifiedRes"
                }
              }
            }
          }
        },
        "tags": ["Statistic"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": { "title": "meeting room booking system", "description": "api document", "version": "1", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http", "description": "auth based on jwt" }
    },
    "schemas": {
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "captcha": { "type": "string" },
          "username": { "type": "string" },
          "nickName": { "type": "string" },
          "password": { "type": "string", "minLength": 6 },
          "email": { "type": "string" }
        },
        "required": ["captcha", "username", "nickName", "password", "email"]
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "createTime": { "type": "number" },
          "roles": { "type": "array", "items": { "type": "string" } },
          "permissions": { "type": "array", "items": { "type": "string" } },
          "id": { "type": "number" },
          "username": { "type": "string" },
          "nickName": { "type": "string" },
          "email": { "type": "string" },
          "headPic": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "isFrozen": { "type": "boolean" },
          "isAdmin": { "type": "boolean" }
        },
        "required": ["createTime", "roles", "permissions", "id", "username", "nickName", "email", "isFrozen", "isAdmin"]
      },
      "LoginUserVo": {
        "type": "object",
        "properties": {
          "userInfo": { "$ref": "#/components/schemas/UserInfo" },
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" }
        },
        "required": ["userInfo", "accessToken", "refreshToken"]
      },
      "LoginUserDto": {
        "type": "object",
        "properties": { "username": { "type": "string" }, "password": { "type": "string", "minLength": 6 } },
        "required": ["username", "password"]
      },
      "RefreshTokenVo": {
        "type": "object",
        "properties": { "accessToken": { "type": "string" }, "refreshToken": { "type": "string" } },
        "required": ["accessToken", "refreshToken"]
      },
      "UserDetailVo": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "username": { "type": "string" },
          "nickName": { "type": "string" },
          "email": { "type": "string" },
          "headPic": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "isFrozen": { "type": "boolean" },
          "isAdmin": { "type": "boolean" },
          "createTime": { "format": "date-time", "type": "string" }
        },
        "required": ["id", "username", "nickName", "email", "isFrozen", "isAdmin", "createTime"]
      },
      "UpdateUserPasswordDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string", "minLength": 6 },
          "email": { "type": "string" },
          "captcha": { "type": "string" }
        },
        "required": ["username", "password", "email", "captcha"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "nickName": { "type": "string" },
          "email": { "type": "string" },
          "captcha": { "type": "string" },
          "headPic": { "type": "string" }
        },
        "required": ["nickName", "email", "captcha"]
      },
      "UserListVo": {
        "type": "object",
        "properties": {
          "users": { "type": "array", "items": { "$ref": "#/components/schemas/UserDetailVo" } },
          "totalCount": { "type": "number" }
        },
        "required": ["users", "totalCount"]
      },
      "PerformanceEntry": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration)"
          },
          "entryType": {
            "type": "string",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType)"
          },
          "name": {
            "type": "string",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name)"
          },
          "startTime": {
            "type": "number",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime)"
          }
        },
        "required": ["duration", "entryType", "name", "startTime"]
      },
      "PerformanceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric (in acronym form).",
            "enum": ["CLS", "FCP", "FID", "INP", "LCP", "TTFB"]
          },
          "value": { "type": "number", "description": "The current value of the metric." },
          "rating": {
            "type": "string",
            "description": "The rating as to whether the metric value is within the \"good\",\n\"needs improvement\", or \"poor\" thresholds of the metric.",
            "enum": ["good", "needs-improvement", "poor"]
          },
          "delta": {
            "type": "number",
            "description": "The delta between the current value and the last-reported value.\nOn the first report, `delta` and `value` will always be the same."
          },
          "id": {
            "type": "string",
            "description": "A unique ID representing this particular metric instance. This ID can\nbe used by an analytics tool to dedupe multiple values sent for the same\nmetric instance, or to group multiple deltas together and calculate a\ntotal. It can also be used to differentiate multiple different metric\ninstances sent from the same page, which can happen if the page is\nrestored from the back/forward cache (in that case new metrics object\nget created)."
          },
          "entries": {
            "description": "Any performance entries relevant to the metric value calculation.\nThe array may also be empty if the metric value was not based on any\nentries (e.g. a CLS value of 0 given no layout shifts).",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PerformanceEntry" }
          },
          "navigationType": {
            "type": "string",
            "description": "The type of navigation.\n\nThis will be the value returned by the Navigation Timing API (or\n`undefined` if the browser doesn't support that API), with the following\nexceptions:\n- 'back-forward-cache': for pages that are restored from the bfcache.\n- 'prerender': for pages that were prerendered.\n- 'restore': for pages that were discarded by the browser and then\nrestored by the user.",
            "enum": ["navigate", "reload", "back-forward", "back-forward-cache", "prerender", "restore"]
          }
        },
        "required": ["name", "value", "rating", "delta", "id", "entries", "navigationType"]
      },
      "ErrorReportDto": {
        "type": "object",
        "properties": { "error": { "type": "string" }, "error_info": { "type": "string" } },
        "required": ["error", "error_info"]
      },
      "MeetingRoom": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string", "maxLength": 10 },
          "capacity": { "type": "number" },
          "location": { "type": "string", "maxLength": 50 },
          "equipment": { "type": "string", "maxLength": 50 },
          "description": { "type": "string", "maxLength": 100 },
          "isBooked": { "type": "boolean" },
          "createTime": { "format": "date-time", "type": "string" },
          "updateTime": { "format": "date-time", "type": "string" }
        },
        "required": [
          "id",
          "name",
          "capacity",
          "location",
          "equipment",
          "description",
          "isBooked",
          "createTime",
          "updateTime"
        ]
      },
      "MeetingRoomListVo": {
        "type": "object",
        "properties": {
          "meetingRooms": { "type": "array", "items": { "$ref": "#/components/schemas/MeetingRoom" } },
          "totalCount": { "type": "number" }
        },
        "required": ["meetingRooms", "totalCount"]
      },
      "CreateMeetingRoomDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "maxLength": 10 },
          "capacity": { "type": "number" },
          "location": { "type": "string", "maxLength": 50 },
          "equipment": { "type": "string", "maxLength": 50 },
          "description": { "type": "string", "maxLength": 100 }
        },
        "required": ["name", "capacity", "location", "equipment", "description"]
      },
      "UpdateMeetingRoomDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "maxLength": 10 },
          "capacity": { "type": "number" },
          "location": { "type": "string", "maxLength": 50 },
          "equipment": { "type": "string", "maxLength": 50 },
          "description": { "type": "string", "maxLength": 100 },
          "id": { "type": "number" }
        },
        "required": ["id"]
      },
      "CreateBookingDto": {
        "type": "object",
        "properties": {
          "startTime": { "type": "number", "format": "date-time" },
          "endTime": { "type": "number", "format": "date-time" },
          "meetingRoomId": { "type": "number" },
          "note": { "type": "string" }
        },
        "required": ["startTime", "endTime", "meetingRoomId"]
      },
      "Permission": {
        "type": "object",
        "properties": { "id": { "type": "number" }, "code": { "type": "string" }, "description": { "type": "string" } },
        "required": ["id", "code", "description"]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "permissions": { "type": "array", "items": { "$ref": "#/components/schemas/Permission" } }
        },
        "required": ["id", "name", "permissions"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "username": { "type": "string" },
          "password": { "type": "string", "minLength": 6 },
          "nickName": { "type": "string" },
          "email": { "type": "string" },
          "headPic": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "isFrozen": { "type": "boolean" },
          "isAdmin": { "type": "boolean" },
          "createTime": { "format": "date-time", "type": "string" },
          "updateTime": { "format": "date-time", "type": "string" },
          "roles": { "type": "array", "items": { "$ref": "#/components/schemas/Role" } }
        },
        "required": [
          "id",
          "username",
          "password",
          "nickName",
          "email",
          "isFrozen",
          "isAdmin",
          "createTime",
          "updateTime",
          "roles"
        ]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "startTime": { "type": "number", "format": "date-time" },
          "endTime": { "type": "number", "format": "date-time" },
          "id": { "type": "number" },
          "status": { "type": "string", "enum": ["progressing", "approved", "rejected", "released"] },
          "note": { "type": "string" },
          "user": { "$ref": "#/components/schemas/User" },
          "room": { "$ref": "#/components/schemas/MeetingRoom" },
          "createTime": { "format": "date-time", "type": "string" },
          "updateTime": { "format": "date-time", "type": "string" }
        },
        "required": ["startTime", "endTime", "id", "status", "user", "room", "createTime", "updateTime"]
      },
      "BookingListVo": {
        "type": "object",
        "properties": {
          "bookings": { "type": "array", "items": { "$ref": "#/components/schemas/Booking" } },
          "totalCount": { "type": "number" }
        },
        "required": ["bookings", "totalCount"]
      },
      "UserBookignCountVo": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "username": { "type": "string" },
          "bookingCount": { "type": "string" }
        },
        "required": ["userId", "username", "bookingCount"]
      },
      "MeetingRoomUsedCountVo": {
        "type": "object",
        "properties": {
          "meetingRoomId": { "type": "string" },
          "meetingRoomName": { "type": "string" },
          "usedCount": { "type": "string" }
        },
        "required": ["meetingRoomId", "meetingRoomName", "usedCount"]
      },
      "NullUnifiedRes": {
        "type": "object",
        "properties": { "data": { "type": "string" }, "code": { "type": "integer" }, "message": { "type": "string" } }
      },
      "LoginUserVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/LoginUserVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "RefreshTokenVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/RefreshTokenVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "UserDetailVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/UserDetailVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "UserListVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/UserListVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "MeetingRoomListVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/MeetingRoomListVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "MeetingRoomUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/MeetingRoom" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "BookingListVoUnifiedRes": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "$ref": "#/components/schemas/BookingListVo" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      }
    }
  }
}
